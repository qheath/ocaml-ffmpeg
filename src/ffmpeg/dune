(rule
 (targets channel_layout_stubs.h channel_layout.ml channel_layout.mli)
 (deps (:gen ../gen_code/translate_enums.exe))
 (action (run %{gen} channel_layout)))

(rule
 (targets sample_format_stubs.h sample_format.ml sample_format.mli)
 (deps (:gen ../gen_code/translate_enums.exe))
 (action (run %{gen} sample_format)))

(rule
 (targets pixel_format_stubs.h pixel_format.ml pixel_format.mli)
 (deps (:gen ../gen_code/translate_enums.exe))
 (action (run %{gen} pixel_format)))

(rule
 (targets codec_id_stubs.h codec_id.ml codec_id.mli)
 (deps (:gen ../gen_code/translate_enums.exe))
 (action (run %{gen} codec_id)))

(rule
 (targets swresample_options_stubs.h swresample_options.ml swresample_options.mli)
 (deps (:gen ../gen_code/translate_enums.exe))
 (action (run %{gen} swresample_options)))

(rule
 (targets c_flags.sexp c_library_flags.sexp)
 (deps (:discover ../gen_code/discover.exe))
 (action (run %{discover})))

(library
 (name fFmpeg)
 (public_name ffmpeg)
 (synopsis "bindings for the ffmpeg library which provides functions for decoding audio and video files")
 (modules ("Channel_layout" Sample_format Pixel_format Avutil Swscale Codec_id Avcodec Av Swresample_options Swresample Avdevice))
 (c_names avutil_stubs swscale_stubs avcodec_stubs av_stubs swresample_stubs avdevice_stubs)
 (libraries bigarray threads.posix)
 (c_library_flags (:include c_library_flags.sexp))
 (c_flags (-O2 (:include c_flags.sexp) -DHAS_CHANNEL_LAYOUT -DHAS_FRAME -Wall)))

(rule
 (targets polymorphic_variant_values_stubs.h)
 (deps (:gen ../gen_code/pv2v.exe))
 (action (run %{gen} %{targets})))
